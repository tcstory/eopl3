#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.3 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 57 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1
          0 2935 0 29 3 10 #"#lang eopl"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 16 #"the-lexical-spec"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 22 3 1 #"'"
0 0 25 3 2 #"(("
0 0 14 3 13 #"my-whitespace"
0 0 25 3 2 #" ("
0 0 14 3 10 #"whitespace"
0 0 25 3 2 #") "
0 0 14 3 4 #"skip"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 9 #"my-number"
0 0 25 3 2 #" ("
0 0 14 3 5 #"digit"
0 0 25 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 25 3 1 #" "
0 0 14 3 5 #"digit"
0 0 25 3 3 #")) "
0 0 14 3 6 #"number"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 9 #"my-number"
0 0 25 3 2 #" ("
0 0 19 3 3 #"\"-\""
0 0 25 3 1 #" "
0 0 14 3 5 #"digit"
0 0 25 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 25 3 1 #" "
0 0 14 3 5 #"digit"
0 0 25 3 3 #")) "
0 0 14 3 6 #"number"
0 0 25 3 2 #") "
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 13 #"my-identifier"
0 0 25 3 2 #" ("
0 0 14 3 6 #"letter"
0 0 25 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 25 3 2 #" ("
0 0 14 3 2 #"or"
0 0 25 3 1 #" "
0 0 14 3 5 #"digit"
0 0 25 3 1 #" "
0 0 14 3 6 #"letter"
0 0 25 3 4 #"))) "
0 0 14 3 6 #"symbol"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"the-grammar"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 22 3 1 #"'"
0 0 25 3 2 #"(("
0 0 14 3 7 #"program"
0 0 25 3 2 #" ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #") "
0 0 14 3 9 #"a-program"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 14 3 9 #"my-number"
0 0 25 3 2 #") "
0 0 14 3 9 #"const-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 14 3 13 #"my-identifier"
0 0 25 3 2 #") "
0 0 14 3 7 #"var-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 3 #"\"-\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\",\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 8 #"diff-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 7 #"\"zero?\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 9 #"zero?-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 4 #"\"if\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"then\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"else\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 2 #") "
0 0 14 3 6 #"if-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 5 #"\"let\""
0 0 25 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 25 3 1 #" "
0 0 14 3 13 #"my-identifier"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"=\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 2 #") "
0 0 19 3 4 #"\"in\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 2 #") "
0 0 14 3 7 #"let-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 7 #"\"minus\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 9 #"minus-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 3 #"\"*\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\",\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 7 #"mul-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 3 #"\"/\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\",\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 7 #"div-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 3 #"\"+\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\",\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 7 #"add-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 8 #"\"equal?\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\",\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 10 #"equal?-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 10 #"\"greater?\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\",\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 12 #"greater?-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 7 #"\"less?\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\",\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 9 #"less?-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 6 #"\"cons\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\",\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 8 #"cons-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 11 #"\"emptylist\""
0 0 25 3 2 #") "
0 0 14 3 13 #"emptylist-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 5 #"\"car\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 7 #"car-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 5 #"\"cdr\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 7 #"cdr-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 7 #"\"null?\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 9 #"null?-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 6 #"\"list\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 2 #" ("
0 0 14 3 14 #"separated-list"
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\",\""
0 0 25 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 8 #"list-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 6 #"\"cond\""
0 0 25 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"==>\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 2 #") "
0 0 19 3 5 #"\"end\""
0 0 25 3 2 #") "
0 0 14 3 8 #"cond-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 6 #"\"let*\""
0 0 25 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 25 3 1 #" "
0 0 14 3 13 #"my-identifier"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"=\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 2 #") "
0 0 19 3 4 #"\"in\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 2 #") "
0 0 14 3 8 #"let*-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 8 #"\"unpack\""
0 0 25 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 25 3 1 #" "
0 0 14 3 13 #"my-identifier"
0 0 25 3 2 #") "
0 0 19 3 3 #"\"=\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"in\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 2 #") "
0 0 14 3 10 #"unpack-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 6 #"\"proc\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 2 #" ("
0 0 14 3 14 #"separated-list"
0 0 25 3 1 #" "
0 0 14 3 13 #"my-identifier"
0 0 25 3 1 #" "
0 0 19 3 3 #"\",\""
0 0 25 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 2 #") "
0 0 14 3 8 #"proc-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 8 #"call-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 9 #"\"letproc\""
0 0 25 3 1 #" "
0 0 14 3 13 #"my-identifier"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"=\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 13 #"my-identifier"
0 0 25 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"in\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 2 #") "
0 0 14 3 12 #"let-proc-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 8 #"\"letrec\""
0 0 25 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 25 3 1 #" "
0 0 14 3 13 #"my-identifier"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 2 #" ("
0 0 14 3 14 #"separated-list"
0 0 25 3 1 #" "
0 0 14 3 13 #"my-identifier"
0 0 25 3 1 #" "
0 0 19 3 3 #"\",\""
0 0 25 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"=\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 2 #") "
0 0 19 3 4 #"\"in\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 2 #") "
0 0 14 3 11 #"let-rec-exp"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 3 #"sll"
0 0 14 3 25 #"gen:make-define-datatypes"
0 0 25 3 1 #" "
0 0 14 3 16 #"the-lexical-spec"
0 0 25 3 1 #" "
0 0 14 3 11 #"the-grammar"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"scan&parse"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 25 #"sllgen:make-string-parser"
0 0 25 3 1 #" "
0 0 14 3 16 #"the-lexical-spec"
0 0 25 3 1 #" "
0 0 14 3 11 #"the-grammar"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"identifier?"
0 0 25 3 1 #" "
0 0 14 3 7 #"symbol?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 23 #"report-no-binding-found"
0 0 25 3 1 #" "
0 0 14 3 10 #"search-var"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 14 3 9 #"apply-env"
0 0 25 3 1 #" "
0 0 19 3 19 #"\"No binding for ~s\""
0 0 25 3 1 #" "
0 0 14 3 10 #"search-var"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 15 #"define-datatype"
0 0 25 3 1 #" "
0 0 14 3 11 #"environment"
0 0 25 3 1 #" "
0 0 14 3 12 #"environment?"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 9 #"empty-env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"extend-env"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 9 #"saved-var"
0 0 25 3 1 #" "
0 0 14 3 11 #"identifier?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 9 #"saved-val"
0 0 25 3 1 #" "
0 0 14 3 7 #"expval?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 9 #"saved-env"
0 0 25 3 1 #" "
0 0 14 3 12 #"environment?"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 14 #"extend-env-rec"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 6 #"p-name"
0 0 25 3 1 #" "
0 0 14 3 11 #"identifier?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 6 #"p-vars"
0 0 25 3 2 #" ("
0 0 14 3 7 #"list-of"
0 0 25 3 1 #" "
0 0 14 3 11 #"identifier?"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 6 #"p-body"
0 0 25 3 1 #" "
0 0 14 3 11 #"expression?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 9 #"saved-env"
0 0 25 3 1 #" "
0 0 14 3 12 #"environment?"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"apply-env"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #" "
0 0 14 3 10 #"search-var"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 12 #"my-apply-env"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #" "
0 0 14 3 10 #"search-var"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"my-apply-env"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #" "
0 0 14 3 10 #"search-var"
0 0 25 3 1 #" "
0 0 14 3 8 #"orig-env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 11 #"environment"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 9 #"empty-env"
0 0 25 3 5 #" () ("
0 0 14 3 23 #"report-no-binding-found"
0 0 25 3 1 #" "
0 0 14 3 10 #"search-var"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"extend-env"
0 0 25 3 2 #" ("
0 0 14 3 9 #"saved-var"
0 0 25 3 1 #" "
0 0 14 3 9 #"saved-val"
0 0 25 3 1 #" "
0 0 14 3 9 #"saved-env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 4 #"eqv?"
0 0 25 3 1 #" "
0 0 14 3 10 #"search-var"
0 0 25 3 1 #" "
0 0 14 3 9 #"saved-var"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                    "
0 0 14 3 9 #"saved-val"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 9 #"apply-env"
0 0 25 3 1 #" "
0 0 14 3 9 #"saved-env"
0 0 25 3 1 #" "
0 0 14 3 10 #"search-var"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 14 #"extend-env-rec"
0 0 25 3 2 #" ("
0 0 14 3 6 #"p-name"
0 0 25 3 1 #" "
0 0 14 3 6 #"p-vars"
0 0 25 3 1 #" "
0 0 14 3 6 #"p-body"
0 0 25 3 1 #" "
0 0 14 3 9 #"saved-env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 4 #"eqv?"
0 0 25 3 1 #" "
0 0 14 3 10 #"search-var"
0 0 25 3 1 #" "
0 0 14 3 6 #"p-name"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                        ("
0 0 14 3 8 #"proc-val"
0 0 25 3 2 #" ("
0 0 14 3 9 #"procedure"
0 0 25 3 1 #" "
0 0 14 3 6 #"p-vars"
0 0 25 3 1 #" "
0 0 14 3 6 #"p-body"
0 0 25 3 1 #" "
0 0 14 3 8 #"orig-env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                        ("
0 0 14 3 12 #"my-apply-env"
0 0 25 3 1 #" "
0 0 14 3 9 #"saved-env"
0 0 25 3 1 #" "
0 0 14 3 10 #"search-var"
0 0 25 3 1 #" "
0 0 14 3 8 #"orig-env"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                       "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 15 #"extend-env-rec*"
0 0 25 3 1 #" "
0 0 14 3 7 #"p-names"
0 0 25 3 1 #" "
0 0 14 3 6 #"p-vars"
0 0 25 3 1 #" "
0 0 14 3 7 #"p-bodys"
0 0 25 3 1 #" "
0 0 14 3 9 #"saved-env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 7 #"p-names"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 14 3 9 #"saved-env"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 15 #"extend-env-rec*"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 7 #"p-names"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 6 #"p-vars"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 7 #"p-bodys"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 14 #"extend-env-rec"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 7 #"p-names"
0 0 25 3 3 #") ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 6 #"p-vars"
0 0 25 3 3 #") ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 7 #"p-bodys"
0 0 25 3 2 #") "
0 0 14 3 9 #"saved-env"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"init-env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"extend-env"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 22 3 1 #"'"
0 0 14 3 1 #"i"
0 0 25 3 2 #" ("
0 0 14 3 7 #"num-val"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 10 #"extend-env"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 22 3 1 #"'"
0 0 14 3 1 #"v"
0 0 25 3 2 #" ("
0 0 14 3 7 #"num-val"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"extend-env"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"     "
0 0 22 3 1 #"'"
0 0 14 3 1 #"x"
0 0 25 3 2 #" ("
0 0 14 3 7 #"num-val"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 3 #") ("
0 0 14 3 9 #"empty-env"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 15 #"define-datatype"
0 0 17 3 1 #" "
0 0 17 3 7 #"program"
0 0 17 3 9 #" program?"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 12 #"  (a-program"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 4 #"exp1"
0 0 17 3 1 #" "
0 0 17 3 14 #"expression?)))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 15 #"define-datatype"
0 0 17 3 1 #" "
0 0 17 3 10 #"expression"
0 0 17 3 12 #" expression?"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 12 #"  (const-exp"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 3 #"num"
0 0 17 3 1 #" "
0 0 17 3 9 #"number?))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 11 #"  (diff-exp"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 4 #"exp1"
0 0 17 3 1 #" "
0 0 17 3 12 #"expression?)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 4 #"exp2"
0 0 17 3 1 #" "
0 0 17 3 13 #"expression?))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 12 #"  (zero?-exp"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 4 #"exp1"
0 0 17 3 1 #" "
0 0 17 3 13 #"expression?))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 9 #"  (if-exp"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 4 #"exp1"
0 0 17 3 1 #" "
0 0 17 3 12 #"expression?)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 4 #"exp2"
0 0 17 3 1 #" "
0 0 17 3 12 #"expression?)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 4 #"exp3"
0 0 17 3 1 #" "
0 0 17 3 13 #"expression?))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 10 #"  (var-exp"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 3 #"var"
0 0 17 3 1 #" "
0 0 17 3 13 #"identifier?))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 10 #"  (let-exp"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 4 #"vars"
0 0 17 3 2 #" ("
0 0 17 3 7 #"list-of"
0 0 17 3 1 #" "
0 0 17 3 13 #"identifier?))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 4 #"exps"
0 0 17 3 2 #" ("
0 0 17 3 7 #"list-of"
0 0 17 3 1 #" "
0 0 17 3 13 #"expression?))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 4 #"body"
0 0 17 3 1 #" "
0 0 17 3 13 #"expression?))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 12 #"  (minus-exp"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 3 #"exp"
0 0 17 3 1 #" "
0 0 17 3 13 #"expression?))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 10 #"  (add-exp"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 4 #"exp1"
0 0 17 3 1 #" "
0 0 17 3 12 #"expression?)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 4 #"exp2"
0 0 17 3 1 #" "
0 0 17 3 13 #"expression?))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 10 #"  (mul-exp"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 4 #"exp1"
0 0 17 3 1 #" "
0 0 17 3 12 #"expression?)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 4 #"exp2"
0 0 17 3 1 #" "
0 0 17 3 13 #"expression?))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 10 #"  (div-exp"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 4 #"exp1"
0 0 17 3 1 #" "
0 0 17 3 12 #"expression?)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 4 #"exp2"
0 0 17 3 1 #" "
0 0 17 3 13 #"expression?))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 13 #"  (equal?-exp"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 4 #"exp1"
0 0 17 3 1 #" "
0 0 17 3 12 #"expression?)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 4 #"exp2"
0 0 17 3 1 #" "
0 0 17 3 13 #"expression?))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 15 #"  (greater?-exp"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 4 #"exp1"
0 0 17 3 1 #" "
0 0 17 3 12 #"expression?)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 4 #"exp2"
0 0 17 3 1 #" "
0 0 17 3 13 #"expression?))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 12 #"  (less?-exp"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 4 #"exp1"
0 0 17 3 1 #" "
0 0 17 3 12 #"expression?)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 4 #"exp2"
0 0 17 3 1 #" "
0 0 17 3 13 #"expression?))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 11 #"  (cons-exp"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 4 #"exp1"
0 0 17 3 1 #" "
0 0 17 3 12 #"expression?)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 4 #"exp2"
0 0 17 3 1 #" "
0 0 17 3 13 #"expression?))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 14 #"emptylist-exp)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 7 #"car-exp"
0 0 17 3 2 #" ("
0 0 17 3 4 #"exp1"
0 0 17 3 1 #" "
0 0 17 3 13 #"expression?))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 7 #"cdr-exp"
0 0 17 3 2 #" ("
0 0 17 3 4 #"exp1"
0 0 17 3 1 #" "
0 0 17 3 13 #"expression?))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 9 #"null?-exp"
0 0 17 3 2 #" ("
0 0 17 3 4 #"exp1"
0 0 17 3 1 #" "
0 0 17 3 13 #"expression?))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 8 #"list-exp"
0 0 17 3 2 #" ("
0 0 17 3 4 #"exps"
0 0 17 3 2 #" ("
0 0 17 3 7 #"list-of"
0 0 17 3 1 #" "
0 0 17 3 14 #"expression?)))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 8 #"cond-exp"
0 0 17 3 2 #" ("
0 0 17 3 5 #"exps1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"list-of"
0 0 17 3 1 #" "
0 0 17 3 13 #"expression?))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 13 #"            ("
0 0 17 3 5 #"exps2"
0 0 17 3 2 #" ("
0 0 17 3 7 #"list-of"
0 0 17 3 1 #" "
0 0 17 3 14 #"expression?)))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 11 #"  (let*-exp"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 4 #"vars"
0 0 17 3 2 #" ("
0 0 17 3 7 #"list-of"
0 0 17 3 1 #" "
0 0 17 3 13 #"identifier?))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 4 #"exps"
0 0 17 3 2 #" ("
0 0 17 3 7 #"list-of"
0 0 17 3 1 #" "
0 0 17 3 13 #"expression?))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 4 #"body"
0 0 17 3 1 #" "
0 0 17 3 13 #"expression?))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 13 #"  (unpack-exp"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 4 #"vars"
0 0 17 3 2 #" ("
0 0 17 3 7 #"list-of"
0 0 17 3 1 #" "
0 0 17 3 13 #"identifier?))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 3 #"exp"
0 0 17 3 1 #" "
0 0 17 3 12 #"expression?)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 4 #"body"
0 0 17 3 1 #" "
0 0 17 3 13 #"expression?))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 11 #"  (proc-exp"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 4 #"vars"
0 0 17 3 2 #" ("
0 0 17 3 7 #"list-of"
0 0 17 3 1 #" "
0 0 17 3 13 #"identifier?))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 4 #"body"
0 0 17 3 1 #" "
0 0 17 3 13 #"expression?))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 11 #"  (call-exp"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 3 #"exp"
0 0 17 3 1 #" "
0 0 17 3 12 #"expression?)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 4 #"args"
0 0 17 3 2 #" ("
0 0 17 3 7 #"list-of"
0 0 17 3 1 #" "
0 0 17 3 14 #"expression?)))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 15 #"  (let-proc-exp"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 9 #"proc-name"
0 0 17 3 1 #" "
0 0 17 3 12 #"identifier?)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 8 #"proc-var"
0 0 17 3 1 #" "
0 0 17 3 12 #"identifier?)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 9 #"proc-body"
0 0 17 3 1 #" "
0 0 17 3 12 #"expression?)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 8 #"let-body"
0 0 17 3 1 #" "
0 0 17 3 13 #"expression?))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 14 #"  (let-rec-exp"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 7 #"p-names"
0 0 17 3 2 #" ("
0 0 17 3 7 #"list-of"
0 0 17 3 1 #" "
0 0 17 3 13 #"identifier?))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 7 #"p-varss"
0 0 17 3 2 #" ("
0 0 17 3 7 #"list-of"
0 0 17 3 2 #" ("
0 0 17 3 7 #"list-of"
0 0 17 3 1 #" "
0 0 17 3 14 #"identifier?)))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 7 #"p-bodys"
0 0 17 3 2 #" ("
0 0 17 3 7 #"list-of"
0 0 17 3 1 #" "
0 0 17 3 13 #"expression?))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"   ("
0 0 17 3 8 #"let-body"
0 0 17 3 1 #" "
0 0 17 3 14 #"expression?)))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 15 #"define-datatype"
0 0 25 3 1 #" "
0 0 14 3 6 #"expval"
0 0 25 3 1 #" "
0 0 14 3 7 #"expval?"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"num-val"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 14 3 7 #"number?"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 8 #"bool-val"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 4 #"bool"
0 0 25 3 1 #" "
0 0 14 3 8 #"boolean?"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 8 #"pair-val"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 7 #"expval?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 7 #"expval?"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 13 #"emptylist-val"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 8 #"proc-val"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 4 #"proc"
0 0 25 3 1 #" "
0 0 14 3 5 #"proc?"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 15 #"define-datatype"
0 0 25 3 1 #" "
0 0 14 3 4 #"proc"
0 0 25 3 1 #" "
0 0 14 3 5 #"proc?"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 9 #"procedure"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 4 #"vars"
0 0 25 3 2 #" ("
0 0 14 3 7 #"list-of"
0 0 25 3 1 #" "
0 0 14 3 11 #"identifier?"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 11 #"expression?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 9 #"saved-env"
0 0 25 3 1 #" "
0 0 14 3 12 #"environment?"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 15 #"apply-procedure"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 5 #"proc1"
0 0 25 3 1 #" "
0 0 14 3 4 #"vals"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 4 #"proc"
0 0 25 3 1 #" "
0 0 14 3 5 #"proc1"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 9 #"procedure"
0 0 25 3 2 #" ("
0 0 14 3 4 #"vars"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 9 #"saved-env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 15 3 6 #"letrec"
0 0 25 3 3 #" (("
0 0 14 3 4 #"loop"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 5 #"vars0"
0 0 25 3 1 #" "
0 0 14 3 5 #"vals0"
0 0 25 3 1 #" "
0 0 14 3 7 #"new-env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 5 #"vars0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                      ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 7 #"new-env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                      ("
0 0 14 3 4 #"loop"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 5 #"vars0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 45 #"                                            ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 5 #"vals0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 45 #"                                            ("
0 0 14 3 10 #"extend-env"
0 0 25 29 1 #"\n"
0 0 25 3 46 #"                                             ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 5 #"vars0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 46 #"                                             ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 5 #"vals0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 45 #"                                             "
0 0 14 3 7 #"new-env"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ("
0 0 14 3 4 #"loop"
0 0 25 3 1 #" "
0 0 14 3 4 #"vars"
0 0 25 3 1 #" "
0 0 14 3 4 #"vals"
0 0 25 3 1 #" "
0 0 14 3 9 #"saved-env"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"cond-val"
0 0 25 3 1 #" "
0 0 14 3 5 #"exps1"
0 0 25 3 1 #" "
0 0 14 3 5 #"exps2"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" (("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 5 #"exps1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 8 #"cond-val"
0 0 25 3 1 #" "
0 0 19 3 26 #"\"No condition got into #t\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 2 #" ("
0 0 14 3 12 #"expval->bool"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 5 #"exps1"
0 0 25 3 2 #") "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 8 #"value-of"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 5 #"exps2"
0 0 25 3 2 #") "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 8 #"cond-val"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 5 #"exps1"
0 0 25 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 5 #"exps2"
0 0 25 3 2 #") "
0 0 14 3 3 #"env"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"let-val"
0 0 25 3 1 #" "
0 0 14 3 4 #"vars"
0 0 25 3 1 #" "
0 0 14 3 4 #"exps"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 7 #"old-env"
0 0 25 3 1 #" "
0 0 14 3 7 #"new-env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" (("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 4 #"vars"
0 0 25 3 3 #") ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 7 #"new-env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 4 #"var0"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 4 #"vars"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 4 #"val0"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 4 #"exps"
0 0 25 3 2 #") "
0 0 14 3 7 #"old-env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 7 #"let-val"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 4 #"vars"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 4 #"exps"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                 "
0 0 14 3 4 #"body"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                 "
0 0 14 3 7 #"old-env"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 10 #"extend-env"
0 0 25 3 1 #" "
0 0 14 3 4 #"var0"
0 0 25 3 1 #" "
0 0 14 3 4 #"val0"
0 0 25 3 1 #" "
0 0 14 3 7 #"new-env"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"let*-val"
0 0 25 3 1 #" "
0 0 14 3 4 #"vars"
0 0 25 3 1 #" "
0 0 14 3 4 #"exps"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" (("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 4 #"vars"
0 0 25 3 3 #") ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 4 #"var0"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 4 #"vars"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 4 #"val0"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 4 #"exps"
0 0 25 3 2 #") "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 8 #"let*-val"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 4 #"vars"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 4 #"exps"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                 "
0 0 14 3 4 #"body"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 10 #"extend-env"
0 0 25 3 1 #" "
0 0 14 3 4 #"var0"
0 0 25 3 1 #" "
0 0 14 3 4 #"val0"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"unpack-val"
0 0 25 3 1 #" "
0 0 14 3 4 #"vars"
0 0 25 3 1 #" "
0 0 14 3 3 #"exp"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 3 #"lst"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 3 #"exp"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 6 #"letrec"
0 0 25 3 3 #" (("
0 0 14 3 4 #"loop"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 5 #"vars0"
0 0 25 3 1 #" "
0 0 14 3 4 #"lst0"
0 0 25 3 1 #" "
0 0 14 3 4 #"env0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 5 #"vars0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 26 #"                         ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 4 #"env0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 26 #"                         ("
0 0 14 3 4 #"loop"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 5 #"vars0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 32 #"                               ("
0 0 14 3 11 #"expval->cdr"
0 0 25 3 1 #" "
0 0 14 3 4 #"lst0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 32 #"                               ("
0 0 14 3 10 #"extend-env"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 5 #"vars0"
0 0 25 3 3 #") ("
0 0 14 3 11 #"expval->car"
0 0 25 3 1 #" "
0 0 14 3 4 #"lst0"
0 0 25 3 2 #") "
0 0 14 3 4 #"env0"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 4 #"loop"
0 0 25 3 1 #" "
0 0 14 3 4 #"vars"
0 0 25 3 1 #" "
0 0 14 3 3 #"lst"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"list-val"
0 0 25 3 1 #" "
0 0 14 3 4 #"exps"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 4 #"exps"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 13 #"emptylist-val"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 8 #"pair-val"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 4 #"exps"
0 0 25 3 2 #") "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 8 #"list-val"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 4 #"exps"
0 0 25 3 2 #") "
0 0 14 3 3 #"env"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"expval->num"
0 0 25 3 1 #" "
0 0 14 3 3 #"val"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 6 #"expval"
0 0 25 3 1 #" "
0 0 14 3 3 #"val"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 7 #"num-val"
0 0 25 3 2 #" ("
0 0 14 3 3 #"num"
0 0 25 3 2 #") "
0 0 14 3 3 #"num"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 29 #"report-expval-extractor-error"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 14 3 3 #"val"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"expval->bool"
0 0 25 3 1 #" "
0 0 14 3 3 #"val"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 6 #"expval"
0 0 25 3 1 #" "
0 0 14 3 3 #"val"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 8 #"bool-val"
0 0 25 3 2 #" ("
0 0 14 3 4 #"bool"
0 0 25 3 2 #") "
0 0 14 3 4 #"bool"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 29 #"report-expval-extractor-error"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 4 #"bool"
0 0 25 3 1 #" "
0 0 14 3 3 #"val"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"expval->car"
0 0 25 3 1 #" "
0 0 14 3 3 #"val"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 6 #"expval"
0 0 25 3 1 #" "
0 0 14 3 3 #"val"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 8 #"pair-val"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 3 #"cdr"
0 0 25 3 2 #") "
0 0 14 3 3 #"car"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 29 #"report-expval-extractor-error"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 3 #"val"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"expval->cdr"
0 0 25 3 1 #" "
0 0 14 3 3 #"val"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 6 #"expval"
0 0 25 3 1 #" "
0 0 14 3 3 #"val"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 8 #"pair-val"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 3 #"cdr"
0 0 25 3 2 #") "
0 0 14 3 3 #"cdr"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 29 #"report-expval-extractor-error"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 3 #"val"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"expval->null?"
0 0 25 3 1 #" "
0 0 14 3 3 #"val"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 6 #"expval"
0 0 25 3 1 #" "
0 0 14 3 3 #"val"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 13 #"emptylist-val"
0 0 25 3 5 #" () ("
0 0 14 3 8 #"bool-val"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 8 #"bool-val"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"expval->proc"
0 0 25 3 1 #" "
0 0 14 3 3 #"val"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 6 #"expval"
0 0 25 3 1 #" "
0 0 14 3 3 #"val"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 8 #"proc-val"
0 0 25 3 2 #" ("
0 0 14 3 4 #"proc"
0 0 25 3 2 #") "
0 0 14 3 4 #"proc"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 29 #"report-expval-extractor-error"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 4 #"proc"
0 0 25 3 1 #" "
0 0 14 3 3 #"val"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 29 #"report-expval-extractor-error"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 7 #"variant"
0 0 25 3 1 #" "
0 0 14 3 5 #"value"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 17 #"expval-extractors"
0 0 25 3 1 #" "
0 0 19 3 28 #"\"Looking for a ~s, found ~s\""
0 0 25 29 1 #"\n"
0 0 25 3 16 #"                "
0 0 14 3 7 #"variant"
0 0 25 3 1 #" "
0 0 14 3 5 #"value"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 3 #"run"
0 0 25 3 1 #" "
0 0 14 3 6 #"string"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 16 #"value-of-program"
0 0 25 3 2 #" ("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 14 3 6 #"string"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 16 #"value-of-program"
0 0 25 3 1 #" "
0 0 14 3 3 #"pgm"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 7 #"program"
0 0 25 3 1 #" "
0 0 14 3 3 #"pgm"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 9 #"a-program"
0 0 25 3 2 #" ("
0 0 14 3 4 #"exp1"
0 0 25 3 3 #") ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 2 #" ("
0 0 14 3 8 #"init-env"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 3 #"exp"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 14 3 3 #"exp"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 9 #"const-exp"
0 0 25 3 2 #" ("
0 0 14 3 3 #"num"
0 0 25 3 3 #") ("
0 0 14 3 7 #"num-val"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 7 #"var-exp"
0 0 25 3 2 #" ("
0 0 14 3 3 #"var"
0 0 25 3 3 #") ("
0 0 14 3 9 #"apply-env"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #" "
0 0 14 3 3 #"var"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 8 #"diff-exp"
0 0 25 3 2 #" ("
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 4 #"num1"
0 0 25 3 2 #" ("
0 0 14 3 11 #"expval->num"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 4 #"num2"
0 0 25 3 2 #" ("
0 0 14 3 11 #"expval->num"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 7 #"num-val"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 4 #"num1"
0 0 25 3 1 #" "
0 0 14 3 4 #"num2"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 9 #"zero?-exp"
0 0 25 3 2 #" ("
0 0 14 3 4 #"exp1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 4 #"num1"
0 0 25 3 2 #" ("
0 0 14 3 11 #"expval->num"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 5 #"zero?"
0 0 25 3 1 #" "
0 0 14 3 4 #"num1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 8 #"bool-val"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 8 #"bool-val"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 6 #"if-exp"
0 0 25 3 2 #" ("
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp3"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 4 #"val1"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 12 #"expval->bool"
0 0 25 3 1 #" "
0 0 14 3 4 #"val1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp3"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 7 #"let-exp"
0 0 25 3 2 #" ("
0 0 14 3 4 #"vars"
0 0 25 3 1 #" "
0 0 14 3 4 #"exps"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 7 #"let-val"
0 0 25 3 1 #" "
0 0 14 3 4 #"vars"
0 0 25 3 1 #" "
0 0 14 3 4 #"exps"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 9 #"minus-exp"
0 0 25 3 2 #" ("
0 0 14 3 3 #"exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 3 #"val"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 3 #"exp"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 7 #"num-val"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #" ("
0 0 14 3 11 #"expval->num"
0 0 25 3 1 #" "
0 0 14 3 3 #"val"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 7 #"add-exp"
0 0 25 3 2 #" ("
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 4 #"num1"
0 0 25 3 2 #" ("
0 0 14 3 11 #"expval->num"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ("
0 0 14 3 4 #"num2"
0 0 25 3 2 #" ("
0 0 14 3 11 #"expval->num"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 7 #"num-val"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 4 #"num1"
0 0 25 3 1 #" "
0 0 14 3 4 #"num2"
0 0 25 3 6 #"))))  "
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 7 #"mul-exp"
0 0 25 3 2 #" ("
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 4 #"num1"
0 0 25 3 2 #" ("
0 0 14 3 11 #"expval->num"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ("
0 0 14 3 4 #"num2"
0 0 25 3 2 #" ("
0 0 14 3 11 #"expval->num"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 7 #"num-val"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 4 #"num1"
0 0 25 3 1 #" "
0 0 14 3 4 #"num2"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 7 #"div-exp"
0 0 25 3 2 #" ("
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 4 #"num1"
0 0 25 3 2 #" ("
0 0 14 3 11 #"expval->num"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ("
0 0 14 3 4 #"num2"
0 0 25 3 2 #" ("
0 0 14 3 11 #"expval->num"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 7 #"num-val"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 4 #"num1"
0 0 25 3 1 #" "
0 0 14 3 4 #"num2"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"equal?-exp"
0 0 25 3 2 #" ("
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 4 #"num1"
0 0 25 3 2 #" ("
0 0 14 3 11 #"expval->num"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 4 #"num2"
0 0 25 3 2 #" ("
0 0 14 3 11 #"expval->num"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ("
0 0 14 3 8 #"bool-val"
0 0 25 3 2 #" ("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 4 #"num1"
0 0 25 3 1 #" "
0 0 14 3 4 #"num2"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 12 #"greater?-exp"
0 0 25 3 2 #" ("
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 4 #"num1"
0 0 25 3 2 #" ("
0 0 14 3 11 #"expval->num"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                        ("
0 0 14 3 4 #"num2"
0 0 25 3 2 #" ("
0 0 14 3 11 #"expval->num"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 8 #"bool-val"
0 0 25 3 2 #" ("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 4 #"num1"
0 0 25 3 1 #" "
0 0 14 3 4 #"num2"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 9 #"less?-exp"
0 0 25 3 2 #" ("
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 4 #"num1"
0 0 25 3 2 #" ("
0 0 14 3 11 #"expval->num"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 4 #"num2"
0 0 25 3 2 #" ("
0 0 14 3 11 #"expval->num"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 8 #"bool-val"
0 0 25 3 2 #" ("
0 0 14 3 1 #"<"
0 0 25 3 1 #" "
0 0 14 3 4 #"num1"
0 0 25 3 1 #" "
0 0 14 3 4 #"num2"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 8 #"cons-exp"
0 0 25 3 2 #" ("
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 8 #"pair-val"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                        ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 13 #"emptylist-exp"
0 0 25 3 5 #" () ("
0 0 14 3 13 #"emptylist-val"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 7 #"car-exp"
0 0 25 3 2 #" ("
0 0 14 3 4 #"exp1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 11 #"expval->car"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 7 #"cdr-exp"
0 0 25 3 2 #" ("
0 0 14 3 4 #"exp1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 11 #"expval->cdr"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 9 #"null?-exp"
0 0 25 3 2 #" ("
0 0 14 3 4 #"exp1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 13 #"expval->null?"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 8 #"list-exp"
0 0 25 3 2 #" ("
0 0 14 3 4 #"exps"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 8 #"list-val"
0 0 25 3 1 #" "
0 0 14 3 4 #"exps"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 8 #"cond-exp"
0 0 25 3 2 #" ("
0 0 14 3 5 #"exps1"
0 0 25 3 1 #" "
0 0 14 3 5 #"exps2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 8 #"cond-val"
0 0 25 3 1 #" "
0 0 14 3 5 #"exps1"
0 0 25 3 1 #" "
0 0 14 3 5 #"exps2"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 8 #"let*-exp"
0 0 25 3 2 #" ("
0 0 14 3 4 #"vars"
0 0 25 3 1 #" "
0 0 14 3 4 #"exps"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 8 #"let*-val"
0 0 25 3 1 #" "
0 0 14 3 4 #"vars"
0 0 25 3 1 #" "
0 0 14 3 4 #"exps"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"unpack-exp"
0 0 25 3 2 #" ("
0 0 14 3 4 #"vars"
0 0 25 3 1 #" "
0 0 14 3 3 #"exp"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"unpack-val"
0 0 25 3 1 #" "
0 0 14 3 4 #"vars"
0 0 25 3 1 #" "
0 0 14 3 3 #"exp"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 8 #"proc-exp"
0 0 25 3 2 #" ("
0 0 14 3 4 #"vars"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 8 #"proc-val"
0 0 25 3 2 #" ("
0 0 14 3 9 #"procedure"
0 0 25 3 1 #" "
0 0 14 3 4 #"vars"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 8 #"call-exp"
0 0 25 3 2 #" ("
0 0 14 3 3 #"exp"
0 0 25 3 1 #" "
0 0 14 3 4 #"args"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 15 #"apply-procedure"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 12 #"expval->proc"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 3 #"exp"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 3 #"map"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 3 #"arg"
0 0 25 3 3 #") ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 3 #"arg"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")) "
0 0 14 3 4 #"args"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 12 #"let-proc-exp"
0 0 25 3 2 #" ("
0 0 14 3 9 #"proc-name"
0 0 25 3 1 #" "
0 0 14 3 8 #"proc-var"
0 0 25 3 1 #" "
0 0 14 3 9 #"proc-body"
0 0 25 3 1 #" "
0 0 14 3 8 #"let-body"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ("
0 0 14 3 8 #"value-of"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                   "
0 0 14 3 8 #"let-body"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ("
0 0 14 3 10 #"extend-env"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                    "
0 0 14 3 9 #"proc-name"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 8 #"proc-val"
0 0 25 3 2 #" ("
0 0 14 3 9 #"procedure"
0 0 25 3 1 #" "
0 0 14 3 8 #"proc-var"
0 0 25 3 1 #" "
0 0 14 3 9 #"proc-body"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                    "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 11 #"let-rec-exp"
0 0 25 3 2 #" ("
0 0 14 3 7 #"p-names"
0 0 25 3 1 #" "
0 0 14 3 7 #"p-varss"
0 0 25 3 1 #" "
0 0 14 3 7 #"p-bodys"
0 0 25 3 1 #" "
0 0 14 3 8 #"let-body"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 8 #"let-body"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 15 #"extend-env-rec*"
0 0 25 3 1 #" "
0 0 14 3 7 #"p-names"
0 0 25 3 1 #" "
0 0 14 3 7 #"p-varss"
0 0 25 3 1 #" "
0 0 14 3 7 #"p-bodys"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 3 #"run"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 29 1 #"\n"
0 0 19 3 6 #"letrec"
0 0 19 29 1 #"\n"
0 0 19 3 46 #"even(x) = if zero?(x) then 1 else (odd -(x,1))"
0 0 19 29 1 #"\n"
0 0 19 3 46 #"odd(x) = if zero?(x) then 0 else (even -(x,1))"
0 0 19 29 1 #"\n"
0 0 19 3 11 #"in (odd 13)"
0 0 19 29 1 #"\n"
0 0 19 3 1 #"\""
0 0 25 3 1 #")"
0           0
