#lang eopl

(define empty-env
  (lambda () empty))

(define (extend-env* vars vals env)
  (cons (cons vars vals) env))

(define extend-env
  (lambda (var val env)
    (extend-env* (list var) (list val)  env)))

(define apply-env
  (lambda (env search-var)
    (if (null? env)
        (report-no-binding-found search-var)
        (letrec ((head (car env))
                 (loop (lambda (vars vals)
                         (cond
                           ((null? vars) (apply-env (cdr env) search-var))
                           ((eqv? (car vars) search-var)
                            (car vals))
                           (else
                            (loop (cdr vars) (cdr vals)))))))
          (loop (car head) (cdr head))))))

(define (report-no-binding-found search-var)
  (eopl:error 'apply-env "No binding for ~s" search-var))

(define my-env
  (extend-env* `(var1 var2 var3) `(val1 val2 val3) (empty-env)))

(display (apply-env my-env `var33))