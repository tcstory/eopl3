#lang racket


(define (subst new old slist)
  (map (lambda (sexp)
         (subst-in-s-exp new old sexp))
       slist))


(define (subst-in-s-exp new old sexp)
  (if (symbol? sexp)
      (if (eqv? old sexp) new sexp)
      (subst new old sexp)))

(subst `a `b `((b c) (b () d)))